<launch>
	<!--model-->
	<arg name="model" default="$(find auto_takeoff)/urdf/erlecopter_base.xacro"/>
	<arg name="name" default="erlecopter"/>

	<!--settings-->
	<arg name="tf_prefix" default="$(optenv ROS_NAMESPACE)"/>
	<arg name="enable_logging" default="false"/>
	<arg name="enable_ground_truth" default="true"/>
	<arg name="log_file" default="erlecopter"/>
	<arg name="debug" default="true"/>
	<arg name="verbose" default="true"/>

	<!-- Initial pose for the drone -->
	<arg name="x" default="0.0"/> <!-- [m], positive to the North -->
	<arg name="y" default="0.0"/> <!-- [m], negative to the East -->
	<arg name="z" default="0.08"/> <!-- [m], positive Up -->
	<arg name="roll" default="0"/> <!-- [rad] -->
	<arg name="pitch" default="0"/> <!-- [rad] -->
	<arg name="yaw" default="3.1415"/> <!-- [rad], negative clockwise -->


	<!-- send the robot XML to param server -->
	<param name="robot_description" command="
    $(find xacro)/xacro.py '$(arg model)'
    enable_logging:=$(arg enable_logging)
    enable_ground_truth:=$(arg enable_ground_truth)
    log_file:=$(arg log_file)"
	/>
	<param name="tf_prefix" type="string" value="$(arg tf_prefix)"/>

	<!-- push robot_description to factory and spawn robot in gazebo -->
	<node name="spawn_erlecopter" pkg="gazebo_ros" type="spawn_model"
	      args="-param robot_description
         -urdf
         -x $(arg x)
         -y $(arg y)
         -z $(arg z)
         -R $(arg roll)
         -P $(arg pitch)
         -Y $(arg yaw)
         -model $(arg name)"
	      respawn="false" output="screen">
	</node>
</launch>
